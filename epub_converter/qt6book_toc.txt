1 Welcome!
    1.0.1 Structure
    1.0.2 Never Ending Work in Progress
    1.1 Acknowledgements
        1.1.1 Contributors
        1.1.2 History
    1.2 Authors
        1.2.1 Johan Thelin
        1.2.2 JÃ¼rgen Bocklage-Ryannel
        1.2.3 Cyril Lorquet
2 Qt and Qt Quick
    2.0.1 Qt 6 Focus
    2.0.2 Qt 6 brings us:
    2.1 Qt Building Blocks
        2.1.1 Qt Modules
        2.1.2 Core-Essential Modules
        2.1.3 Qt Add-On Modules
        2.1.4 Supported Platforms
        2.1.5 Qt Project
    2.2 Qt 6 Introduction
        2.2.1 Qt Quick
        2.2.2 Digesting a User Interface
3 Quick Start
    3.1 Installing Qt 6 SDK
        3.1.1 Update Qt
        3.1.2 Build from Source
    3.2 Hello World
    3.3 Application Types
        3.3.1 Console Application
            3.3.1.1 String Handling
            3.3.1.2 Container Classes
            3.3.1.3 File IO
        3.3.2 C++ Widget Application
            3.3.2.1 Custom Widgets
            3.3.2.2 Desktop Widgets
            3.3.2.3 Drawing Shapes
        3.3.3 Adapting Data
        3.3.4 Qt Quick Application
    3.4 Summary
4 Qt Creator IDE
    4.1 The User Interface
    4.2 Registering your Qt Kit
    4.3 Managing Projects
    4.4 Using the Editor
    4.5 Locator
    4.6 Debugging
    4.7 Shortcuts
    4.8 Configure Shortcuts
5 Quick Starter
    5.1 QML Syntax
        5.1.1 Properties
        5.1.2 Scripting
        5.1.3 Binding
    5.2 Core Elements
        5.2.1 Item Element
        5.2.2 Rectangle Element
        5.2.3 Text Element
        5.2.4 Image Element
        5.2.5 MouseArea Element
    5.3 Components
    5.4 Simple Transformations
    5.5 Positioning Elements
    5.6 Layout Items
        5.6.1 Hidden Gems
    5.7 Input Elements
        5.7.1 TextInput
        5.7.2 FocusScope
        5.7.3 TextEdit
        5.7.4 Keys Element
    5.8 Advanced Techniques
        5.8.1 Performance of QML
6 Fluid Elements
    6.1 Animations
        6.1.1 Animation Elements
        6.1.2 Applying Animations
        6.1.3 Clickable Image V2
            6.1.3.1 The objects ascending
            6.1.3.2 First object
            6.1.3.3 Second object
            6.1.3.4 Third object
        6.1.4 Easing Curves
        6.1.5 Grouped Animations
            6.1.5.1 Parallel animations
            6.1.5.2 Sequential animations
            6.1.5.3 Nested animations
    6.2 States and Transitions
        6.2.1 States
        6.2.2 Transitions
    6.3 Advanced Techniques
7 UI Controls
    7.1 Introduction to Controls
    7.2 An Image Viewer
        7.2.1 The Desktop Version
        7.2.2 Moving to Mobile
        7.2.3 A Shared Codebase
        7.2.4 Native Dialogs
    7.3 Common Patterns
        7.3.1 Nested Screens
        7.3.2 Side by Side Screens
        7.3.3 Document Windows
    7.4 The Imagine Style
    7.5 Summary
8 Model-View-Delegate
    8.1 Concept
    8.2 Basic Models
        8.2.1 Using a number
        8.2.2 Using an array
        8.2.3 Using a `ListModel`
        8.2.4 Using a delegate as default property
    8.3 Dynamic Views
        8.3.1 Orientation
        8.3.2 Keyboard Navigation and Highlighting
        8.3.3 Header and Footer
        8.3.4 The GridView
    8.4 Delegate
        8.4.1 Animating Added and Removed Items
        8.4.2 Shape-Shifting Delegates
    8.5 Advanced Techniques
        8.5.1 The PathView
        8.5.2 Table Models
        8.5.3 A Model from XML
        8.5.4 Lists with Sections
        8.5.5 The ObjectModel
        8.5.6 Models with Actions
        8.5.7 Tuning Performance
    8.6 Summary
9 Canvas Element
    9.1 Convenience API
    9.2 Gradients
    9.3 Shadows
    9.4 Images
    9.5 Transformation
    9.6 Composition Modes
    9.7 Pixel Buffers
    9.8 Canvas Paint
    9.9 Porting from HTML5 Canvas
        9.9.1 Spirograph
        9.9.2 Glowing Lines
10 Shapes
    10.1 A Basic Shape
    10.2 Building Paths
    10.3 Filling Shapes
    10.4 Animating Shapes
    10.5 Summary
11 Effects in QML
    11.0.1 Particle Effects
    11.0.2 Shader Effects
    11.1 Particle Concept
    11.2 Simple Simulation
    11.3 Particle Parameters
    11.4 Directed Particles
    11.5 Affecting Particles
        11.5.1 Age
        11.5.2 Attractor
        11.5.3 Friction
        11.5.4 Gravity
        11.5.5 Turbulence
        11.5.6 Wander
    11.6 Particle Groups
        11.6.1 Launch Time
        11.6.2 Let there be fireworks
    11.7 Particle Painters
    11.8 Graphics Shaders
    11.9 Shader Elements
    11.10 Fragment Shaders
        11.10.1 Setting up the scene
        11.10.2 A red shader
        11.10.3 A red shader with texture
        11.10.4 The red channel property
        11.10.5 The red channel animated
        11.10.6 Baking
    11.11 Wave Effect
    11.12 Vertex Shader
        11.12.1 Setting up the scene
        11.12.2 Minimize and normalize
        11.12.3 Primitive Bending
        11.12.4 Better Bending
        11.12.5 Choosing Sides
        11.12.6 Packaging
    11.13 Curtain Effect
    11.14 Summary
12 Multimedia
    12.1 Playing Media
        12.1.1 Playing audio
        12.1.2 Playing a video
        12.1.3 Controlling the playback
            12.1.3.1 The volume slider
            12.1.3.2 Play / Pause
            12.1.3.3 Interactive progress slider
        12.1.4 The media status
    12.2 Sound Effects
    12.3 Video Streams
    12.4 Capturing Images
        12.4.1 The viewfinder
        12.4.2 The captured images list
        12.4.3 Switching between cameras
        12.4.4 The playback
    12.5 Summary
    12.6 Qt Quick 3D
    12.7 The Basics
        12.7.1 A Basic Scene
        12.7.2 The Built-in Meshes
        12.7.3 Lights
    12.8 Working with Assets
        12.8.1 Blender
        12.8.2 Balsam
        12.8.3 The Qt Quick 3D Assets
    12.9 Materials and Light
        12.9.1 The Built-in Materials
            12.9.1.1 Default Material Properties
            12.9.1.2 Principled Material Properties
        12.9.2 Image-based Lighting
    12.10 Animations
    12.11 Skeletal Animations
    12.12 Mixing 2D and 3D Contents
        12.12.1 3D Contents in a 2D Scene
        12.12.2 2D Contents in a 3D Scene
    12.13 Summary
13 Networking
    13.1 Serving UI via HTTP
        13.1.1 Networked Components
        13.1.2 Importing a QML components directory
    13.2 Templates
    13.3 HTTP Requests
        13.3.1 Flickr Calls
    13.4 Local files
    13.5 REST API
        13.5.1 Read Request
        13.5.2 Read Entry
        13.5.3 Create Entry
        13.5.4 Update Entry
        13.5.5 Delete Entry
        13.5.6 HTTP Verbs
        13.5.7 Client REST
    13.6 Authentication using OAuth
        13.6.1 Integration example
            13.6.1.1 Creating the App
            13.6.1.2 The QML file
                13.6.1.2.1 Authorizing the app
                13.6.1.2.2 Listing the user's favorite artists
            13.6.1.3 SpotifyAPI
            13.6.1.4 The Spotify model
    13.7 Web Sockets
        13.7.1 WS Server
        13.7.2 WS Client
    13.8 Summary
14 Storage
    14.1 Settings
    14.2 Local Storage - SQL
        14.2.1 Crazy Rectangle
15 Dynamic QML
    15.1 Loading Components Dynamically
        15.1.1 Connecting Indirectly
        15.1.2 Binding Indirectly
    15.2 Creating and Destroying Objects
        15.2.1 Dynamically Loading and Instantiating Items
            15.2.1.1 Incubating Components
        15.2.2 Dynamically Instantiating Items from Text
        15.2.3 Managing Dynamically Created Elements
    15.3 Tracking Dynamic Objects
    15.4 Summary
16 JavaScript
    16.1 Browser/HTML vs Qt Quick/QML
    16.2 JS Language
    16.3 JS Objects
        16.3.1 Print all keys from QML Item
        16.3.2 Parse an object to a JSON string and back
        16.3.3 Current Date
        16.3.4 Call a function by name
    16.4 Creating a JS Console
        16.4.1 JSConsole.qml
            16.4.1.1 Application window
            16.4.1.2 Form
            16.4.1.3 Calling the library
        16.4.2 jsconsole.js
17 Qt and C++
    17.0.1 Qt C++
    17.0.2 Qt for Python
    17.0.3 Cross Platform
    17.1 A Boilerplate Application
    17.2 The QObject
    17.3 Build Systems
        17.3.1 CMake
        17.3.2 References
        17.3.3 QMake
        17.3.4 References
    17.4 Common Qt Classes
        17.4.1 QString
        17.4.2 Sequential Containers
        17.4.3 Associative Containers
        17.4.4 File IO
        17.4.5 More Classes
    17.5 Models in C++
        17.5.1 A simple model
        17.5.2 More Complex Data
        17.5.3 Dynamic Data
18 Extending QML with C++
    18.1 Understanding the QML Run-time
    18.2 Plugin Content
    18.3 Creating the plugin
    18.4 FileIO Implementation
    18.5 Using FileIO
        18.5.1 The Application Window
        18.5.2 Using Actions
        18.5.3 Formatting the Table
        18.5.4 Reading Data
        18.5.5 Writing Data
        18.5.6 Finishing Touch
    18.6 Summary
19 Qt for Python
    19.1 Introduction
    19.2 Installing
    19.3 Building an Application
        19.3.1 Running QML from Python
        19.3.2 Exposing Python Objects to QML
            19.3.2.1 Signals and Slots
            19.3.2.2 Properties
        19.3.3 Exposing a Python class to QML
        19.3.4 A Model from Python
    19.4 Limitations
    19.5 Summary
20 Qt for MCUs
    20.1 Setup
    20.2 Hello World - for MCUs
    20.3 Integrating with C++
        20.3.1 The C++
        20.3.2 The QML
        20.3.3 Revisiting the CMake file
    20.4 Working with Models
        20.4.1 The C++
        20.4.2 The QML
    20.5 Summary